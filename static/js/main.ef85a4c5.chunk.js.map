{"version":3,"sources":["components/navigation/navigation.jsx","components/logo/logo.jpg","components/logo/logo.jsx","components/rank/rank.jsx","components/imageLinkForm/imagelinkform.jsx","App.js","reportWebVitals.js","index.js"],"names":["Navigation","style","display","justifyContent","className","background","Logo","options","max","height","width","src","Brain","alt","Rank","ImageLinkForm","onInputChange","type","onChange","particlesOptions","color","value","fpsLimit","interactivity","events","onClick","enable","mode","onHover","resize","modes","push","quantity","repulse","distance","duration","particles","links","opacity","collisions","move","directions","outModes","default","random","speed","straight","number","density","area","shape","size","min","detectRetina","App","particlesInit","useCallback","engine","console","log","loadFull","particlesLoaded","container","id","init","loaded","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4SAYeA,EAVI,WACf,OACI,qBAAKC,MAAO,CAACC,QAAS,OAAQC,eAAgB,YAA9C,SACI,mBAAGC,UAAU,kDAAkDH,MAAO,CAACI,WAAa,OAApF,uBAKX,E,iBCVc,MAA0B,iCCoB1BC,G,MAfF,WACT,OACI,sBAAKF,UAAU,cAAcH,MAAO,CAAEC,QAAS,OAAQC,eAAgB,gBAAiBE,WAAY,UAApG,UACI,cAAC,IAAD,CAAMD,UAAU,gBAAgBG,QAAS,CAAEC,IAAM,IAAMP,MAAO,CAAEQ,OAAQ,GAAIC,MAAO,IAAnF,SACI,qBAAKN,UAAU,aAAf,SACI,qBAAKO,IAAKC,EAAOC,IAAI,mBAG7B,8BACI,oBAAIT,UAAU,oBAAd,6BAIf,GCHcU,EAbF,WACT,OACI,sBAAKV,UAAU,MAAf,UACI,qBAAKA,UAAU,WAAf,SACK,2CAEL,qBAAKA,UAAU,WAAf,SACK,SAIhB,ECQcW,G,MAlBO,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cACrB,OACI,gCACI,mBAAGZ,UAAU,YAAb,SACK,6DAEL,qBAAKA,UAAU,SAAf,SACI,sBAAKA,UAAU,+BAAf,UACI,uBAAOA,UAAU,qBAAqBa,KAAK,OAAOC,SAAUF,IAC5D,wBAAQZ,UAAU,sDAAlB,2BAOnB,GCPKe,EAAmB,CACvBd,WAAY,CACVe,MAAO,CACLC,MAAO,YAGXC,SAAU,GACVC,cAAe,CACbC,OAAQ,CACNC,QAAS,CACPC,QAAQ,EACRC,KAAM,QAERC,QAAS,CACPF,QAAQ,EACRC,KAAM,WAERE,QAAQ,GAEVC,MAAO,CACLC,KAAM,CACJC,SAAU,GAEZC,QAAS,CACPC,SAAU,IACVC,SAAU,MAIhBC,UAAW,CACThB,MAAO,CACLC,MAAO,WAETgB,MAAO,CACLjB,MAAO,UACPc,SAAU,IACVR,QAAQ,EACRY,QAAS,GACT5B,MAAO,GAET6B,WAAY,CACVb,QAAQ,GAEVc,KAAM,CACJC,WAAY,OACZf,QAAQ,EACRgB,SAAU,CACRC,QAAS,UAEXC,QAAQ,EACRC,MAAO,EACPC,UAAU,GAEZC,OAAQ,CACNC,QAAS,CACTtB,QAAQ,EACRuB,KAAM,KAEN5B,MAAO,IAETiB,QAAS,CACPjB,MAAO,IAET6B,MAAO,CACLjC,KAAM,UAERkC,KAAM,CACJ9B,MAAO,CAAE+B,IAAK,EAAG5C,IAAK,KAG1B6C,cAAc,GAmCDC,EAhCH,WAEV,IAAMC,EAAgBC,sBAAW,iDAAC,WAAOC,GAAP,kFAChCC,QAAQC,IAAIF,GADoB,SAK1BG,YAASH,GALiB,2CAAD,sDAM9B,IAEGI,EAAkBL,sBAAW,iDAAC,WAAOM,GAAP,2FAC5BJ,QAAQC,IAAIG,GADgB,2CAAD,sDAEhC,IAEH,OACE,sBAAK1D,UAAU,MAAf,UACE,cAAC,IAAD,CACEA,UAAU,YACV2D,GAAG,cACHC,KAAMT,EACNU,OAAQJ,EACRtD,QAASY,IAEX,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,MAIL,ECvGc+C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,EACT,GAEJ,E,MCHDQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,G","file":"static/js/main.ef85a4c5.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Navigation = () => {\r\n    return (\r\n        <nav style={{display: 'flex', justifyContent: 'flex-end'}}>\r\n            <p className=\"f5 link white pa2 pointer br2 ma2 grow shadow-2\" style={{background : 'red'}}>\r\n                Sign Out\r\n            </p>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Navigation;","export default __webpack_public_path__ + \"static/media/logo.8ca2e799.jpg\";","import React from \"react\";\r\nimport Tilt from \"react-tilt\";\r\nimport Brain from './logo.jpg';\r\nimport './logo.css';\r\n\r\nconst Logo = () => {\r\n    return (\r\n        <div className=\"ma2 pa2 br3\" style={{ display: 'flex', justifyContent: 'space-between', background: 'purple' }} >\r\n            <Tilt className=\"Tilt shadow-2\" options={{ max : 50 }} style={{ height: 75, width: 75 }} >\r\n                <div className=\"Tilt-inner\">\r\n                    <img src={Brain} alt=\"brain-logo\" />\r\n                </div>\r\n            </Tilt>\r\n            <div>\r\n                <h2 className=\"ba yellow pa1 br3\">MAGIC BRAIN</h2>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Logo;","import React from \"react\";\r\n\r\nconst Rank = () => {\r\n    return (\r\n        <div className=\"ma4\">\r\n            <div className=\"white f3\">\r\n                {\"Hello! Smallz, your current rank is...\"}\r\n            </div>\r\n            <div className=\"white f1\">\r\n                {\"#5\"}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Rank;","import React from \"react\";\r\nimport './imagelinkform.css';\r\n\r\nconst ImageLinkForm = ({ onInputChange }) => {\r\n    return (\r\n        <div>\r\n            <p className=\"f3 orange\">\r\n                {\"This Magic Brain will detect the faces in your pictures.\"}\r\n            </p>\r\n            <div className=\"center\">\r\n                <div className=\"center form pa4 br3 shadow-5\">\r\n                    <input className=\"f4 pa2 w-70 center\" type='text' onChange={onInputChange} />\r\n                    <button className=\"w-30 grow f4 link ph3 pv2 dib white bg-light-purple\">\r\n                        Detect\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>     \r\n    );\r\n}\r\n\r\nexport default ImageLinkForm;","import React, { useState } from 'react';\r\nimport './App.css';\r\nimport Particles from 'react-tsparticles';\r\nimport { loadFull } from 'tsparticles';\r\nimport { useCallback } from 'react';\r\nimport Navigation from './components/navigation/navigation';\r\nimport Logo from './components/logo/logo';\r\nimport Rank from './components/rank/rank';\r\nimport ImageLinkForm from './components/imageLinkForm/imagelinkform';\r\n\r\n\r\n\r\nconst particlesOptions = {\r\n  background: {\r\n    color: {\r\n      value: \"#161B36\",\r\n    },\r\n  },\r\n  fpsLimit: 20,\r\n  interactivity: {\r\n    events: {\r\n      onClick: {\r\n        enable: true,\r\n        mode: \"push\",\r\n      },\r\n      onHover: {\r\n        enable: true,\r\n        mode: \"repulse\",\r\n      },\r\n      resize: true,\r\n    },\r\n    modes: {\r\n      push: {\r\n        quantity: 4,\r\n      },\r\n      repulse: {\r\n        distance: 200,\r\n        duration: 0.4,\r\n      },\r\n    },\r\n  },\r\n  particles: {\r\n    color: {\r\n      value: \"#ffffff\",\r\n    },\r\n    links: {\r\n      color: \"#FFFF00\",\r\n      distance: 100,\r\n      enable: true,\r\n      opacity: 0.5,\r\n      width: 1,\r\n    },\r\n    collisions: {\r\n      enable: true,\r\n    },\r\n    move: {\r\n      directions: \"none\",\r\n      enable: true,\r\n      outModes: {\r\n        default: \"bounce\",\r\n      },\r\n      random: false,\r\n      speed: 1,\r\n      straight: false,\r\n    },\r\n    number: {\r\n      density: {\r\n      enable: true,\r\n      area: 800,\r\n      },\r\n      value: 50,\r\n    },\r\n    opacity: {\r\n      value: 0.5,\r\n    },\r\n    shape: {\r\n      type: \"square\",\r\n    },\r\n    size: {\r\n      value: { min: 1, max: 5 },\r\n    },\r\n  },\r\n  detectRetina: true,\r\n};\r\n\r\nconst App = () => {\r\n\r\n  const particlesInit = useCallback(async (engine) => {\r\n    console.log(engine);\r\n    // you can initiate the tsParticles instance (engine) here, adding custom shapes or presets\r\n    // this loads the tsparticles package bundle, it's the easiest method for getting everything ready\r\n    // starting from v2 you can add only the features you need reducing the bundle size\r\n    await loadFull(engine);\r\n  }, []);\r\n  \r\n  const particlesLoaded = useCallback(async (container) => {\r\n    await console.log(container);\r\n  }, []);\r\n \r\n  return (\r\n    <div className='App'>\r\n      <Particles\r\n        className=\"particles\"\r\n        id=\"tsparticles\"\r\n        init={particlesInit}\r\n        loaded={particlesLoaded}\r\n        options={particlesOptions}\r\n      />\r\n      <Navigation />\r\n      <Logo />\r\n      <Rank />\r\n      <ImageLinkForm />\r\n      {/* {<FaceRecognition />} */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'tachyons';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}